  // Backbone.History  // ----------------  // Handles cross-browser history management, based on either  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)  // and URL fragments. If the browser supports neither (old IE, natch),  // falls back to polling.  var History = Backbone.History = function() {    this.handlers = [];        <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.bindAll.js") $>    _.bindAll(this, 'checkUrl');    // Ensure that `History` can be used outside of the browser.    if (typeof window !== 'undefined') {      this.location = window.location;      this.history = window.history;    }  };  // Cached regex for stripping a leading hash/slash and trailing space.  var routeStripper = /^[#\/]|\s+$/g;  // Cached regex for stripping leading and trailing slashes.  var rootStripper = /^\/+|\/+$/g;  // Cached regex for detecting MSIE.  var isExplorer = /msie [\w.]+/;  // Cached regex for removing a trailing slash.  var trailingSlash = /\/$/;  // Has the history handling already been started?  History.started = false;  // Set up all inheritable **Backbone.History** properties and methods.  <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.extend.js") $>  _.extend(History.prototype, Events, {    <$= IncludeJoin(",","src/Backbone/Backbone.History.*.js") $>  });  // Create the default Backbone.history.  Backbone.history = new History;