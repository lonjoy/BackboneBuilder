  // Backbone.Router  // ---------------  // Routers map faux-URLs to actions, and fire events when routes are  // matched. Creating a new one sets its `routes` hash, if not set statically.  var Router = Backbone.Router = function(options) {    options || (options = {});    if (options.routes) this.routes = options.routes;    this._bindRoutes();    this.initialize.apply(this, arguments);  };  // Cached regular expressions for matching named param parts and splatted  // parts of route strings.  var optionalParam = /\((.*?)\)/g;  var namedParam    = /(\(\?)?:\w+/g;  var splatParam    = /\*\w+/g;  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;  // Set up all inheritable **Backbone.Router** properties and methods.  <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.extend.js") $>  <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.isRegExp.js") $>  <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.isFunction.js") $>  <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.result.js") $>  <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.keys.js") $>  <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.map.js") $>    _.extend(Router.prototype, Events, {        <$= IncludeJoin(",","src/Backbone/Backbone.Router.*.js") $>  });