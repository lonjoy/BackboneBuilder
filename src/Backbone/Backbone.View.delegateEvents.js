    <$ Require("src/Backbone/Backbone.View.undelegateEvents.js") $>        <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.result.js") $>    <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.isFunction.js") $>    <$ Push(Config.Backbone.Underscore.Require,"src/Underscore/_.bind.js") $>    // pairs. Callbacks will be bound to the view, with `this` set properly.    // Uses event delegation for efficiency.    // Omitting the selector binds the event to `this.el`.    // This only works for delegate-able events: not `focus`, `blur`, and    // not `change`, `submit`, and `reset` in Internet Explorer.    delegateEvents: function(events) {      if (!(events || (events = _.result(this, 'events')))) return this;      this.undelegateEvents();      for (var key in events) {        var method = events[key];        if (!_.isFunction(method)) method = this[events[key]];        if (!method) continue;        var match = key.match(delegateEventSplitter);        var eventName = match[1], selector = match[2];        method = _.bind(method, this);        eventName += '.delegateEvents' + this.cid;        if (selector === '') {          this.$el.on(eventName, method);        } else {          this.$el.on(eventName, selector, method);        }      }      return this;    }